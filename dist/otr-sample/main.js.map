{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.scss","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/module/main/dashboard/dashboard.component.html","webpack:///./src/app/module/main/dashboard/dashboard.component.scss","webpack:///./src/app/module/main/dashboard/dashboard.component.ts","webpack:///./src/app/module/main/edit-row/edit-row.component.html","webpack:///./src/app/module/main/edit-row/edit-row.component.scss","webpack:///./src/app/module/main/edit-row/edit-row.component.ts","webpack:///./src/app/module/service/truck-route/truck-route.service.ts","webpack:///./src/app/module/shared/directive/validator/zip/zip-validator.directive.ts","webpack:///./src/app/module/shared/pipe/cell-render/cell-render.pipe.ts","webpack:///./src/app/module/shared/shared.module.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { DashboardComponent } from './module/main/dashboard/dashboard.component';\nimport { EditRowComponent } from './module/main/edit-row/edit-row.component';\nconst routes: Routes = [ {\n  path: '', component: DashboardComponent\n}, {\n  path: 'edit-row', component: EditRowComponent,\n} ];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","module.exports = \"<div class=\\\"container\\\">\\n\\n<router-outlet></router-outlet>\\n</div>\\n\"","module.exports = \"\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'app';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { DashboardComponent } from './module/main/dashboard/dashboard.component';\nimport { EditRowComponent } from './module/main/edit-row/edit-row.component';\nimport { SharedModule } from './module/shared/shared.module';\n@NgModule({\n  declarations: [\n    AppComponent,\n    DashboardComponent,\n    EditRowComponent\n\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    SharedModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","module.exports = \"<h1>\\n  logistic dashboard\\n</h1>\\n<table class=\\\"table\\\">\\n  <tbody>\\n    <tr>\\n\\n      <th>id</th>\\n      <th>equipmentGroup</th>\\n      <th>origin</th>\\n      <th>dest</th>\\n      <th>Mon</th>\\n      <th>Tue</th>\\n      <th>Wed</th>\\n      <th>Thu</th>\\n      <th>Fri</th>\\n      <th>Sat</th>\\n      <th>Sun</th>\\n    </tr>\\n    <tr *ngFor=\\\"let truckRoute of truckRoutes\\\" (click)=\\\"clickRow( $event, truckRoute )\\\">\\n      <ng-container *ngFor=\\\"let field of fields\\\">\\n        <td>{{ field?.field | cellrender: truckRoute: field }}</td>\\n      </ng-container>\\n      </tr>\\n      </tbody>\\n</table>\\n<div class=\\\"row\\\">\\n  <div class=\\\"col-sm-12\\\">\\n    <input type=\\\"button\\\" name=\\\"update\\\" value=\\\"Add Vehicle\\\" (click)=\\\"addVehicle( )\\\" />\\n  </div>\\n</div>\\n\"","module.exports = \"\"","import { Component, OnInit } from '@angular/core';\nimport { EquipmentGroup, TruckRouteService } from '../../service/truck-route/truck-route.service';\nimport { Router } from '@angular/router';\nimport { SharedModule } from '../../shared/shared.module';\nimport { CellRenderPipe } from '../../shared/pipe/cell-render/cell-render.pipe';\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.scss'],\n  providers: [ CellRenderPipe ]\n})\nexport class DashboardComponent implements OnInit {\n  truckRoutes: object[] = [];\n  fields;\n  constructor(\n    private truckRouteService: TruckRouteService,\n    private router: Router\n  ) { }\n\n  ngOnInit() {\n    this.fields = this.truckRouteService.getFields( );\n    this.truckRouteService.getRoutes( ).subscribe( ( truckRoutes ) => { this.truckRoutes = truckRoutes } );\n  }\n\n  public getEquipmentGroup( id ) {\n    return EquipmentGroup[ id ];\n  }\n\n  clickRow( e, row ) {\n    console.log('Click row', e, row );\n    this.router.navigate( [ '/edit-row/', { id: row.id } ] );\n  }\n\n  addVehicle( ) {\n    this.router.navigate( [ '/edit-row/' ] );\n  }\n\n}\n","module.exports = \"<form #f=\\\"ngForm\\\" (ngSubmit)=\\\"f.form.valid && update( f )\\\">\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-xs-12\\\">\\n      <label>ID</label> {{ truckRoute.id }}\\n    </div>\\n  </div>\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-xs-12\\\">\\n      <select [(ngModel)]=\\\"truckRoute.equipmentGroupId\\\" name=\\\"equipmentGroupId\\\" required>\\n        <option value=\\\"1\\\">Flatbed</option>\\n        <option value=\\\"2\\\">Tanker</option>\\n        <option value=\\\"3\\\">Van</option>\\n        <option value=\\\"4\\\">Reffer</option>\\n      </select>\\n      <label>Equipment Group ID</label>\\n      <div class=\\\"alert alert-danger\\\">Required</div>\\n\\n    </div>\\n  </div>\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-xs-12\\\">\\n\\n      <input name=\\\"origin\\\" [(ngModel)]=\\\"truckRoute.origin\\\" validateZip  required/>\\n      <label>Origin</label>\\n      <div class=\\\"alert alert-danger\\\">{{ f.controls.origin?.errors?.message }}</div>\\n    </div>\\n  </div>\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-xs-12\\\">\\n      <input name=\\\"destination\\\" [(ngModel)]=\\\"truckRoute.destination\\\" validateZip required />\\n      <label>destination</label>\\n      <div class=\\\"alert alert-danger\\\">{{ f.controls.destination?.errors?.message }}</div>\\n    </div>\\n  </div>\\n  <h2>Availability</h2>\\n  <!-- <ng-container *ngFor=\\\"let days of truckRoute?.availability | keyvalue\\\">\\n {{ days.key }} <input type=\\\"checkbox\\\" name=\\\"days.key\\\" />\\n</ng-container>\\n-->\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-sm-12\\\">\\n      <input type=\\\"checkbox\\\" name=\\\"monday\\\" [(ngModel)]=\\\"truckRoute.availability.monday\\\">Monday\\n    </div>\\n  </div>\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-sm-12\\\">\\n      <input type=\\\"checkbox\\\" name=\\\"tuesday\\\" [(ngModel)]=\\\"truckRoute.availability.tuesday\\\">Tuesday\\n    </div>\\n  </div>\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-sm-12\\\">\\n      <input type=\\\"checkbox\\\" name=\\\"wednesday\\\" [(ngModel)]=\\\"truckRoute.availability.wednesday\\\">Wednesday\\n    </div>\\n  </div>\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-sm-12\\\">\\n      <input type=\\\"checkbox\\\" name=\\\"thursday\\\" [(ngModel)]=\\\"truckRoute.availability.thursday\\\">Thursday\\n    </div>\\n  </div>\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-sm-12\\\">\\n      <input type=\\\"checkbox\\\" name=\\\"friday\\\" [(ngModel)]=\\\"truckRoute.availability.friday\\\">Friday\\n    </div>\\n  </div>\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-sm-12\\\">\\n      <input type=\\\"checkbox\\\" name=\\\"saturday\\\" [(ngModel)]=\\\"truckRoute.availability.saturday\\\">Saturday\\n    </div>\\n  </div>\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-sm-12\\\">\\n      <input type=\\\"checkbox\\\" name=\\\"sunday\\\" [(ngModel)]=\\\"truckRoute.availability.sunday\\\">Sunday\\n    </div>\\n  </div>\\n\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-sm-12\\\">\\n      <input type=\\\"button\\\" value=\\\"Cancel\\\" name=\\\"cancel\\\" (click)=\\\"cancelUpdate()\\\" />\\n      <input [disabled]=\\\"! f.form.valid\\\" type=\\\"submit\\\" value=\\\"Update\\\" name=\\\"update\\\"  />\\n    </div>\\n  </div>\\n</form>\\n\"","module.exports = \"\"","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { TruckRouteService } from '../../service/truck-route/truck-route.service';\nimport { SharedModule } from '../../shared/shared.module';\n\n@Component({\n  selector: 'app-edit-row',\n  templateUrl: './edit-row.component.html',\n  styleUrls: ['./edit-row.component.scss']\n})\nexport class EditRowComponent implements OnInit {\n  truckRoute;\n\n  constructor(\n    private route: ActivatedRoute,\n    private router: Router,\n    private truckRoutesService: TruckRouteService\n  ) { }\n\n  ngOnInit() {\n    let id = this.route.snapshot.params['id'];\n    const truckRoute = this.truckRoutesService.getRoute( id );\n    this.truckRoute = { ...truckRoute };\n    if ( ! this.truckRoute.id ) {\n      this.truckRoute.availability = {\n        monday: false,\n        tuesday: false,\n        wednesday: false,\n        thursday: false,\n        friday: false,\n        saturday: false,\n        sunday: false\n      };\n    }\n\n  }\n\n  cancelUpdate( ) {\n    this.router.navigate( [ '/' ] );\n  }\n\n  update( form, e ) {\n    this.truckRoutesService.setRoute( this.truckRoute );\n    this.router.navigate( [ '/' ] );\n  }\n\n  debug( ...args ) {\n    console.log( 'DEBUG', ...args );\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { of, observable, Observable } from 'rxjs';\nimport { setupRouter } from '@angular/router/src/router_module';\n\n\nexport enum EquipmentGroup {\n  Flatebed = 1,\n  Tanker,\n  Van,\n  Reffer\n};\n\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TruckRouteService {\n  truckRouteFields = [ {\n    field: 'id',\n    header: 'Id'\n  }, {\n    field: 'equipmentGroupId',\n    header: 'EId'\n  }, {\n    field: 'origin',\n    header: 'Origin'\n  }, {\n    field: 'destination',\n    header: 'Destination'\n  }, {\n    field: 'availability.monday',\n    header: 'Monday',\n    format: 'check'\n  }, {\n    field: 'availability.tuesday',\n    header: 'Tuesday',\n    format: 'check'\n  }, {\n    field: 'availability.wednesday',\n    header: 'Wednesday',\n    format: 'check'\n  }, {\n    field: 'availability.thursday',\n    header: 'Thursday',\n    format: 'check'\n  }, {\n    field: 'availability.friday',\n    header: 'Friday',\n    format: 'check'\n  }, {\n    field: 'availability.saturday',\n    header: 'Saturday',\n    format: 'check'\n  }, {\n    field: 'availability.sunday',\n    header: 'Sunday',\n    format: 'check'\n  }];\n  truckRoutes = [ {\n    id: 1,\n    equipmentGroupId: 2,\n    origin: 60564,\n    destination: 52001,\n    availability: {\n      monday: true,\n      tuesday: false,\n      wednesday: true,\n      thursday: true,\n      friday: true,\n      saturday: false,\n      sunday: false\n    }\n  }, {\n      id: 2,\n      equipmentGroupId: 3,\n      origin: 60056,\n      destination: 80525,\n      availability: {\n        monday: false,\n        tuesday: false,\n        wednesday: true,\n        thursday: true,\n        friday: true,\n        saturday: false,\n        sunday: false\n      }\n  }, {\n        id: 3,\n        equipmentGroupId: 3,\n        origin: 60056,\n        destination: 80525,\n        availability: {\n          monday: false,\n          tuesday: false,\n          wednesday: true,\n          thursday: true,\n          friday: true,\n          saturday: false,\n          sunday: false\n        }\n  } ];\n\n  constructor() { }\n\n  getRoutes( ): Observable<any> {\n    return of( this.truckRoutes );\n  }\n\n  getRoute( id ): Observable<any> {\n    let finalValue = null;\n    this.truckRoutes.forEach( (truckRoute, index ) => {\n      if ( ! finalValue && ( truckRoute.id === parseInt(id, 10 ) ) ) {\n        finalValue = truckRoute;\n      }\n    } );\n    return finalValue;\n  }\n  setRoute( updatedRoute ) {\n\n    if ( ! updatedRoute.id ) {\n      updatedRoute.id = this.truckRoutes.length;\n      this.truckRoutes.push( updatedRoute );\n    }\n    this.truckRoutes.forEach( (truckRoute, index ) => {\n      if ( truckRoute.id === updatedRoute.id ) {\n        this.truckRoutes[ index ] = updatedRoute;\n      }\n    } );\n  }\n\n  addRoute( newRoute ) {\n    newRoute.id = this.truckRoutes.length;\n    this.truckRoutes.push( newRoute );\n  }\n\n  getFields( ) {\n    return this.truckRouteFields;\n  }\n}\n\n","import { Directive, forwardRef, Attribute, Input } from '@angular/core';\nimport { Validator, AbstractControl, NG_VALIDATORS, FormControl, ValidationErrors } from '@angular/forms';\n\n@Directive({\n    selector: '[validateZip],[validateZip][formControlName],[validateZip][formControl],[validateZip][ngModel]',\n    providers: [ {\n      provide: NG_VALIDATORS,\n      useExisting: forwardRef(() => ZipValidatorDirective),\n      multi: true\n    } ]\n})\nexport class ZipValidatorDirective implements Validator {\n    @Input( ) zipFormat: string;\n    constructor(\n     // @Attribute('validateEqual') public validateEqual: string,\n       // @Attribute('reverse') public reverse: string)\n    ) {\n\n    }\n\n    static validateZip( control: FormControl ): ValidationErrors {\n      let value = control.value;\n      let retValue = null;\n      if ( ( value === '' ) ||\n           ( value && value.match && ! value.match( /^\\s*\\d{5}(\\-\\d{4})?/ ) )\n        )  {\n        retValue = { message: 'Zip format must be either 99999 or 99999-9999'};\n      }\n      return retValue;\n    }\n\n    validate( value: FormControl ) : ValidationErrors | null {\n      return ZipValidatorDirective.validateZip( value )\n    }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'cellrender'\n})\nexport class CellRenderPipe implements PipeTransform {\n\n  transform(value: any, row?, column?, args?: any): any {\n    let split = column.field.split( '.' );\n    let field = row;\n    split.forEach( ( leg ) => {\n      field = field[ leg ];\n    } );\n\n    if ( column.format === 'check' ) {\n      field = ( field ) ? 'X' : '';\n    }\n    return field;\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { CellRenderPipe } from './pipe/cell-render/cell-render.pipe';\nimport { ZipValidatorDirective } from './directive/validator/zip/zip-validator.directive';\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule\n  ],\n  declarations: [CellRenderPipe, ZipValidatorDirective],\n  exports: [\n    CellRenderPipe,\n    FormsModule,\n    ZipValidatorDirective\n  ]\n})\nexport class SharedModule { }\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}